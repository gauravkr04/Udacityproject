Description: >
  Gaurav Kumar/Challenge3

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    AMItoUse:
        Description: AMI to use to create EC2 Instance
        Type: String

Resources:
#IAM Role to allow EC2 session manager to access the server
  RoleforSSMAccess:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  #Instance Profile
  ServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: String
      Path: /
      Roles: 
        - !Ref RoleforSSMAccess

  #WebServerSecurityGroup
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0 

  #EC2 Instance
  ServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      ImageId: !Ref AMItoUse
      IamInstanceProfile: !Ref ServerInstanceProfile
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: WebServerSecGroup
          SubnetId: 
            Fn::ImportValue:
              !Sub "${EnvironmentName}-PRIV-NET"     
